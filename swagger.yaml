swagger: "2.0"
info:
  description: "This is the documentation of the ELECITY-API"
  version: "1.0.0"
  title: "ELECITY-API Doc"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "thecandyman@gmx.fr"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
schemes:
- "https"
- "http"
paths:
  /api/v1/users:
    post:
      tags:
      - "ELECITY users"
      summary: "Add a new user to the ELECITY-API"
      description: "Add a new user to the ELECITY-API !"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "New user object"
        required: true
        schema:
          $ref: "#/definitions/CreateUser"
      responses:
        "200":
          description: "User created successfully"
        "400":
          description: "User error"
        "500":
          description: "Internal server error"
   
    get:
      tags:
      - "ELECITY users"
      summary: "All users of the ELECITY-API "
      description: "You will be able to get all the ELECITY users !"
      produces:
      - "application/json"
      responses:
        "200":
          description: "All users successfully"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/User"
        "400":
          description: "User error"
        "500":
          description: "Internal server error"
  /api/v1/users/{id}:
    get:
      tags:
      - "ELECITY users"
      summary: "Get user in the ELECITY-API with his id "
      description: "You will be able to get one ELECITY user by is id !"
      produces:
      - "application/json"
      parameters:
      - name: id
        in: path
        required: true
        type: string
      responses:
        "200":
          description: "User found successfully"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/User"
        "400":
          description: "User error"
        "500":
          description: "Internal server error"
    delete:
      tags:
      - "ELECITY users"
      summary: "Delete user in the ELECITY-API using his id "
      description: "You will be able to delete one ELECITY user using his id !"
      produces:
      - "application/json"
      parameters:
      - name: id
        in: path
        required: true
        type: string
      responses:
        "200":
          description: "User deleted successfully"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/User"
        "400":
          description: "User error"
        "500":
          description: "Internal server error"
    patch:
      tags:
      - "ELECITY users"
      summary: "Updated one user in the ELECITY-API with his id"
      description: "You will be able to update one ELECITY user with his id"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "User id to be updated in the ELECITY-API"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Updated user object"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        "400":
          description: "Invalid user supplied"
        "404":
          description: "User not found"

  /api/v1/cars:
    post:
      tags:
      - "ELECITY cars"
      summary: "Add a new car to the ELECITY-API"
      description: "Add a new car to the ELECITY-API !"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "New user object"
        required: true
        schema:
          $ref: "#/definitions/CreateCar"
      responses:
        "200":
          description: "the car was created successfully"
        "400":
          description: "User error"
        "500":
          description: "Internal server error"

    get:
      tags:
      - "ELECITY cars"
      summary: "All the cars you will find in the ELECITY-API "
      description: "You will be able to get all the ELECITY cars !"
      produces:
      - "application/json"
      responses:
        "200":
          description: "View all cars successfully"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Car"
        "400":
          description: "User error"
        "500":
          description: "Internal server error"

  /api/v1/cars/{id}:
    get:
      tags:
      - "ELECITY cars"
      summary: "Get a car in the ELECITY-API with the id "
      description: "You will be able to get one ELECITY car by is id !"
      produces:
      - "application/json"
      parameters:
      - name: id
        in: path
        required: true
        type: string
      responses:
        "200":
          description: "The car was found successfully in the ELECITY-API"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Car"
        "400":
          description: "User error"
        "500":
          description: "Internal server error"
    delete:
      tags:
      - "ELECITY cars"
      summary: "Delete car in the ELECITY-API using his id "
      description: "You will be able to delete one ELECITY car using his id !"
      produces:
      - "application/json"
      parameters:
      - name: id
        in: path
        required: true
        type: string
      responses:
        "200":
          description: "Car deleted successfully"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Car"
        "400":
          description: "User error"
        "500":
          description: "Internal server error"
          
    patch:
      tags:
      - "ELECITY cars"
      summary: "Update one car in the ELECITY-API with his id"
      description: "You will be able to update one ELECITY car with his id"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Car id to be updated in the ELECITY-API"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Updated car object"
        required: true
        schema:
          $ref: "#/definitions/Car"
      responses:
        "400":
          description: "Invalid car supplied"
        "404":
          description: "Car not found"

  /api/v1/offers:
    post:
      tags:
      - "ELECITY offers"
      summary: "Add a new offer to the ELECITY-API"
      description: "Add a new offer to the ELECITY-API !"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "New offer object"
        required: true
        schema:
          $ref: "#/definitions/Offer"
      responses:
        "200":
          description: "the offer was created successfully"
        "400":
          description: "User error"
        "500":
          description: "Internal server error"
    get:
      tags:
      - "ELECITY offers"
      summary: "All the offers you will find in the ELECITY-API "
      description: "You will be able to get all the ELECITY offers !"
      produces:
      - "application/json"
      responses:
        "200":
          description: "View all offers successfully"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Offer"
        "400":
          description: "User error"
        "500":
          description: "Internal server error"
  /api/v1/offers/{id}:
    get:
      tags:
      - "ELECITY offers"
      summary: "Get a offer in the ELECITY-API with the id "
      description: "You will be able to get one ELECITY offer by is id !"
      produces:
      - "application/json"
      parameters:
      - name: id
        in: path
        required: true
        type: string
      responses:
        "200":
          description: "The offer was found successfully in the ELECITY-API"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Offer"
        "400":
          description: "User error"
        "500":
          description: "Internal server error"
    delete:
      tags:
      - "ELECITY offers"
      summary: "Delete Offer in the ELECITY-API using his id "
      description: "You will be able to delete one ELECITY Offer using his id !"
      produces:
      - "application/json"
      parameters:
      - name: id
        in: path
        required: true
        type: string
      responses:
        "200":
          description: "Offer deleted successfully"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Offer"
        "400":
          description: "User error"
        "500":
          description: "Internal server error"
          
    patch:
      tags:
      - "ELECITY offers"
      summary: "Update one offer in the ELECITY-API with his id"
      description: "You will be able to update one ELECITY offer with his id"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Offer id to be updated in the ELECITY-API"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Updated offer object"
        required: true
        schema:
          $ref: "#/definitions/Offer"
      responses:
        "200":
          description: "Offer updated successfully"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Offer"
        "400":
          description: "Invalid offer supplied"
        "404":
          description: "Offer not found"

definitions:
    CreateUser:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        address:
          type: object
          properties:
            street:
              type: string
            zipcode:
              type: number
            city:
              type: string
        birth_date:
          type: string
        phone:
          type: string
        mail:
          type: string
        password:
          type: string
        role:
          type: string
    User:
      type: object
      properties:
        _id:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        address:
          type: object
          properties:
            street:
              type: string
            zipcode:
              type: number
            city:
              type: string
        birth_date:
          type: string
        phone:
          type: string
        mail:
          type: string
        password:
          type: string
        role:
          type: string
    Car:
      type: object
      properties:
        car_available:
          type: boolean
        car_brand:
          type: string
        car_model:
          type: string
        car_category:
          type: string
        car_color:
          type: string
        car_state:
          type: string
        car_kilometer:
          type: number
        car_history:
          type: object
          properties:
           car_purchase:
            type: string
           car_crashed:
            type: boolean
           crash_history:
            type: string    
    Offer:
      type: object
      properties:
        offer_name:
          type: string
        offer_price:
          type: string
        car_model:
          type: string
        car_category:
          type: string
        offer_description:
          type: string
        offer_duration:
          type: number